# tls13_compat/__init__.py
#
# Copyright The Mbed TLS Contributors
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
    TLS 1.3 test generate utils
"""
import os
import stat
import sys
from .core import CIPHER_SUITE_IANA_VALUE, NAMED_GROUP_IANA_VALUE, SIG_ALG_IANA_VALUE
from .compat_test import CLIENT_CLASSES, SERVER_CLASSES, generate_all_hrr_compat_tests, \
    generate_tests_of_hrr_and_compt
from .psk_compat_test import generate_all_psk_ephemeral_group_tests, generate_all_kex_mode_tests

AVAILABLE_PROGS = ['mbedTLS', 'OpenSSL', 'GnuTLS']


TLS13_TESTS = {"tls13-compat": generate_tests_of_hrr_and_compt,
               "tls13-psk_ephemeral": generate_all_psk_ephemeral_group_tests,
               "tls13-kex-modes": generate_all_kex_mode_tests}


SSL_OUTPUT_HEADER = '''#!/bin/sh

# {filename}
#
# Copyright The Mbed TLS Contributors
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Purpose
#
# List TLS1.3 test cases. They are generated by
# `{cmd}`.
#
# PLEASE DO NOT EDIT THIS FILE. IF NEEDED, PLEASE MODIFY `generate_tls13_compat_tests.py` OR PYTHON
# FILES IN `tests/scripts/tls13_compat`.
# AND REGENERATE THIS FILE.
#
'''


def write_tests_to_file(f, filename, func, cmd):
    f.write(SSL_OUTPUT_HEADER.format(
        filename=os.path.basename(filename), cmd=cmd))
    for case in func():
        if not case:
            continue
        f.write('\n')
        f.write(case)
        f.write('\n')


def output_test_cases(tests, output_path, cmd):
    """
    Main entry for code generator
    """
    for test in tests:
        if output_path:
            path = os.path.join(output_path, test + '.sh')
            with open(path, 'w') as f:
                write_tests_to_file(f, path, TLS13_TESTS[test], cmd)
            os.chmod(path, os.stat(path).st_mode | stat.S_IEXEC)
        else:
            write_tests_to_file(sys.stdout, test + '.sh',
                                TLS13_TESTS[test], cmd)
